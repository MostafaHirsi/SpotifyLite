// Mocks generated by Mockito 5.3.2 from annotations
// in spotify_lite/test/bloc/authentication_bloc.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:spotify_lite/models/authentication.dart' as _i2;
import 'package:spotify_lite/services/spotify_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthenticationModel_0 extends _i1.SmartFake
    implements _i2.AuthenticationModel {
  _FakeAuthenticationModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SpotifyService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSpotifyService extends _i1.Mock implements _i3.SpotifyService {
  MockSpotifyService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get clientId => (super.noSuchMethod(
        Invocation.getter(#clientId),
        returnValue: '',
      ) as String);
  @override
  String get clientSecret => (super.noSuchMethod(
        Invocation.getter(#clientSecret),
        returnValue: '',
      ) as String);
  @override
  _i4.Future<_i2.AuthenticationModel> getUserAuthenticatedSpotifyApi(
          Uri? redirectUrl) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserAuthenticatedSpotifyApi,
          [redirectUrl],
        ),
        returnValue: _i4.Future<_i2.AuthenticationModel>.value(
            _FakeAuthenticationModel_0(
          this,
          Invocation.method(
            #getUserAuthenticatedSpotifyApi,
            [redirectUrl],
          ),
        )),
      ) as _i4.Future<_i2.AuthenticationModel>);
}
